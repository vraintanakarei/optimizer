[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pytest-runner",
    "cmake>=3.1,<4.0",
    "pybind11>=2.6.0",
    "protobuf>=3.20.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "onnxoptimizer"
dynamic = ["version"]
description = "Open Neural Network Exchange"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "ONNX Optimizer Authors", email = "onnx-technical-discuss@lists.lfai.foundation"}
]
maintainers = [
    {name = "ONNX Optimizer Authors", email = "onnx-technical-discuss@lists.lfai.foundation"}
]
keywords = ["deep-learning", "ONNX"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "onnx>=1.12.0",
    "protobuf>=3.20.2"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-runner",
    "nbval",
    "flake8",
    "mypy==0.600"
]

[project.urls]
Homepage = "https://github.com/onnx/optimizer"
Issues = "https://github.com/onnx/optimizer/issues"

[project.scripts]
onnxoptimizer = "onnxoptimizer:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["onnxoptimizer"]
include-package-data = true

[tool.setuptools.dynamic]
version = {file = "VERSION_NUMBER"}

[tool.pytest.ini_options]
addopts = "--nbval --current-env"
testpaths = ["onnxoptimizer/test/"]

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux2014"
test-command = "pytest {project}/onnxoptimizer/test"
test-skip = ["cp311-*", "*_arm64", "*_universal2:arm64"]
build = ["cp39-*", "cp310-*", "cp311-*"]
skip = ["cp36-*", "*-win32", "*-manylinux_i686", "*-musllinux_*"]

[tool.cibuildwheel.linux]
before-all = "WD=`pwd`"
before-test = "pip install torch==1.13.1+cpu torchvision==0.14.1+cpu -f https://download.pytorch.org/whl/torch_stable.html"
test-requires = "pytest nbval flake8 mypy onnxruntime"
test-command = "cd {project} && flake8 && pytest"

[tool.cibuildwheel.macos]
archs = ["x86_64", "universal2"]
before-all = "WD=`pwd`"
test-requires = "pytest nbval"

[tool.cibuildwheel.windows]
test-requires = "pytest nbval"
environment = "USE_MSVC_STATIC_RUNTIME=0 ONNX_OPT_USE_SYSTEM_PROTOBUF=1 CMAKE_ARGS='-DONNX_USE_PROTOBUF_SHARED_LIBS=ON'"

[tool.mypy]
mypy_path = "stubs:third_party/onnx/third_party/pybind11"
strict_optional = true
warn_return_any = true
warn_no_return = true
warn_redundant_casts = true
warn_incomplete_stub = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
disallow_untyped_decorators = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "onnxoptimizer.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "onnxoptimizer.onnx_opt_cpp2py_export"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "onnx.*"
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tools.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "setup"
ignore_errors = true
