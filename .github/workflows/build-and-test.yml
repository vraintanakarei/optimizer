name: Build and Test

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-10.15]
    steps:
    - uses: actions/checkout@v4
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23.0
    - uses: actions/upload-artifact@v4
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install build dependencies
      run: python3 -m pip install build

    - name: Build sdist
      run: python3 -m build --sdist

    - name: Install libraries
      run: |
        apt-get update
        apt-get install -y libprotobuf-dev

    - name: Install and test sdist
      run: |
        # It's important to leave the project directory where a 'onnxoptimizer' subdirectory exists
        cd dist
        python3 -m pip install *.tar.gz
        python3 -c "import onnxoptimizer; print(onnxoptimizer.get_fuse_and_elimination_passes())"

    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
